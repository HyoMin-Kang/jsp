/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-06-21 21:18:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookshop.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import ch14.bookshop.shopping.CommentDBBean;
import ch14.bookshop.shopping.CommentDataBean;
import java.util.List;
import java.text.NumberFormat;

public final class bestSeller_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ch14.bookshop.shopping.CommentDataBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("ch14.bookshop.shopping.CommentDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

	request.setCharacterEncoding("utf-8");
	String title = "Book Shopping Mall";
	String book_kind = "best";
	
	 List<ShopBookDataBean> bookLists = null;
	 ShopBookDataBean bookList = null;
	 ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
	 bookLists = bookProcess.getBooks(book_kind);
	 
	 CommentDBBean dbPro = CommentDBBean.getInstance();

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("<div class=\"col-md-8 blog-main\">\r\n");
      out.write("<h3 class=\"pb-3 mb-4 font-italic border-bottom\">Best Seller</h3>\r\n");
      out.write("\r\n");

	for(int i=0;i<bookLists.size();i++){
		bookList = (ShopBookDataBean)bookLists.get(i);
		int count = dbPro.getCommentCount(bookList.getBook_id());
		double avgstar = dbPro.avgStar(bookList.getBook_id());
		String star_img = "0";
		if (avgstar >= 0 && avgstar < 1)
			star_img = "0";
		else if (avgstar >= 1 && avgstar < 1.5) 
			star_img = "1";
		else if (avgstar >= 1.5 && avgstar < 2)
			star_img = "1_5";
		else if (avgstar >= 2 && avgstar < 2.5)
			star_img = "2";
		else if (avgstar >= 2.5 && avgstar < 3) 
			star_img = "2_5";
		else if (avgstar >= 3 && avgstar < 3.5)
			star_img = "3";
		else if (avgstar >= 3.5 && avgstar < 4)
			star_img = "3_5";
		else if (avgstar >= 4 && avgstar < 4.5)
			star_img = "4";
		else if (avgstar >= 4.5 && avgstar < 5)
			star_img = "4_5";
		else 
			star_img = "5";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<table class=\"table table-borderless\"> \r\n");
      out.write("<tr> \r\n");
      out.write("\t<td rowspan=\"4\">\r\n");
      out.write("        <a href=\"bookContent.jsp?book_id=");
      out.print(bookList.getBook_id());
      out.write("\">\r\n");
      out.write("       <img src=\"/cban/imageFile/");
      out.print(bookList.getBook_image());
      out.write("\" border=\"0\" width=\"60\" height=\"90\"></a>\r\n");
      out.write("</td> \r\n");
      out.write("    \t<td><b><a href=\"bookContent.jsp?book_id=");
      out.print(bookList.getBook_id());
      out.write("\">\r\n");
      out.write("       ");
      out.print(bookList.getBook_title() );
      out.write("</a></b>\r\n");
      out.write("       </td> \r\n");
      out.write("    <td rowspan=\"4\">\r\n");
      out.write("      ");
if(bookList.getBook_count()==0){ 
      out.write("\r\n");
      out.write("            <b>일시품절</b>\r\n");
      out.write("      ");
}else{ 
      out.write("\r\n");
      out.write("            &nbsp;\r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>        \r\n");
      out.write("  <tr> \r\n");
      out.write("     <td>");
      out.print(bookList.getAuthor());
      out.write("저 | ");
      out.print(bookList.getPublishing_com());
      out.write(' ');
      out.write('|');
      out.write(' ');
      out.print(bookList.getPublishing_date() );
      out.write("</td> \r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr> \r\n");
      out.write("     <td>");
      out.print(NumberFormat.getInstance().format(bookList.getBook_price()));
      out.write("원 -> <b><font color=\"red\">\r\n");
      out.write("       ");
      out.print(NumberFormat.getInstance().format((int)(bookList.getBook_price()*((double)(100-bookList.getDiscount_rate())/100))));
      out.write("원</font></b>\r\n");
      out.write("       (");
      out.print(NumberFormat.getInstance().format(bookList.getDiscount_rate()) );
      out.write("% 할인)\r\n");
      out.write("      </td> \r\n");
      out.write("  </tr> \r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td>리뷰 (");
      out.print(count );
      out.write(")개 | 평균 별점 <img src=\"/cban/imageFile/rating");
      out.print(star_img);
      out.write(".png\" width=\"100\"> (");
      out.print(avgstar );
      out.write(")</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</div> <!-- /.blog-main -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/side.jsp", out, false);
      out.write(" <!-- aside -->\r\n");
      out.write("</div> <!-- /.row -->\r\n");
      out.write("\r\n");
      out.write("</div> <!-- /.container -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
