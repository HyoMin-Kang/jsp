/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-06-21 20:53:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookshop.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import java.text.NumberFormat;

public final class introList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  ShopBookDataBean bookLists[] = null;
  int number =0;
  String book_kindName="";
  
  ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
  for(int i=10; i<=16;i++){
	  bookLists = bookProcess.getBooks(i+"0",3);
     
	if(bookLists[0].getBook_kind().equals("100")){
		book_kindName="건강 취미";
	}else if(bookLists[0].getBook_kind().equals("110")){
		book_kindName="경제 경영";  
    }else if(bookLists[0].getBook_kind().equals("120")){
		book_kindName="문학";
    }else if(bookLists[0].getBook_kind().equals("130")){
		book_kindName="사회 정치";  
   	}else if(bookLists[0].getBook_kind().equals("140")){
		book_kindName="자기계발";
  	 }else if(bookLists[0].getBook_kind().equals("150")){
		book_kindName="자연과학";  
 	 }else if(bookLists[0].getBook_kind().equals("160")){
      	book_kindName="참고서";
  	}else if(bookLists[0].getBook_kind().equals("200")){
		book_kindName="문학 소설";  
 	}else if(bookLists[0].getBook_kind().equals("210")){
		book_kindName="경제 경영";
 	}else if(bookLists[0].getBook_kind().equals("220")){
		book_kindName="인문 사회";  
	}else if(bookLists[0].getBook_kind().equals("230")){
		book_kindName="예술 대중문화";
	}else if(bookLists[0].getBook_kind().equals("240")){
	      book_kindName="취미 라이프스타일";  
   }else if(bookLists[0].getBook_kind().equals("250")){
	      book_kindName="컴퓨터";
   }else if(bookLists[0].getBook_kind().equals("260")){
	      book_kindName="자연과학";
   }

      out.write("\r\n");
      out.write("  <br><b>");
      out.print(book_kindName);
      out.write(" 분류의 신간목록: \r\n");
      out.write("  <a href=\"list.jsp?book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">더보기</a>\r\n");
      out.write("  </b>\r\n");
             
  for(int j=0;j<bookLists.length;j++){
	  if(bookLists[j] == null) continue;

      out.write("\r\n");
      out.write("    <table > \r\n");
      out.write("      <tr> \r\n");
      out.write("        <td rowspan=\"4\">\r\n");
      out.write("          <a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("             <img src=\"/cban/imageFile/");
      out.print(bookLists[j].getBook_image());
      out.write("\" border=\"0\" width=\"60\" height=\"90\"></a></td> \r\n");
      out.write("       <td>\r\n");
      out.write("       \t\t<b><a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("              ");
      out.print(bookLists[j].getBook_title() );
      out.write("</a></b>\r\n");
      out.write("        </td> \r\n");
      out.write("       <td rowspan=\"4\">\r\n");
      out.write("          ");
if(bookLists[j].getBook_count()==0){ 
      out.write("\r\n");
      out.write("              <b>일시품절</b>\r\n");
      out.write("          ");
}else{ 
      out.write("\r\n");
      out.write("               &nbsp;\r\n");
      out.write("          ");
} 
      out.write("\r\n");
      out.write("       </td>\r\n");
      out.write("     </tr>        \r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>출판사 : ");
      out.print(bookLists[j].getPublishing_com());
      out.write("</td> \r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>저자 : ");
      out.print(bookLists[j].getAuthor());
      out.write("</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>정가 :");
      out.print(NumberFormat.getInstance().format(bookLists[j].getBook_price()));
      out.write("원<br>\r\n");
      out.write("                판매가 : <b><font color=\"red\">\r\n");
      out.write("       ");
      out.print(NumberFormat.getInstance().format((int)(bookLists[j].getBook_price()*((double)(100-bookLists[j].getDiscount_rate())/100))));
      out.write("\r\n");
      out.write("            </font></b>원</td> \r\n");
      out.write("     </tr> \r\n");
      out.write("     </table>\r\n");
      out.write("     <hr>\r\n");

  }
}
  for(int i=10; i<=16;i++){
	  bookLists = bookProcess.getBooks(i+"0",3);
     
	if(bookLists[0].getBook_kind().equals("100")){
		book_kindName="건강 취미";
	}else if(bookLists[0].getBook_kind().equals("110")){
		book_kindName="경제 경영";  
    }else if(bookLists[0].getBook_kind().equals("120")){
		book_kindName="문학";
    }else if(bookLists[0].getBook_kind().equals("130")){
		book_kindName="사회 정치";  
   	}else if(bookLists[0].getBook_kind().equals("140")){
		book_kindName="자기계발";
  	 }else if(bookLists[0].getBook_kind().equals("150")){
		book_kindName="자연과학";  
 	 }else if(bookLists[0].getBook_kind().equals("160")){
      	book_kindName="참고서";
  	}

      out.write("\r\n");
      out.write("  <br><b>");
      out.print(book_kindName);
      out.write(" 분류의 신간목록: \r\n");
      out.write("  <a href=\"list.jsp?book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">더보기</a>\r\n");
      out.write("  </b>\r\n");
             
  for(int j=0;j<bookLists.length;j++){
	  if(bookLists[j] == null) continue;

      out.write("\r\n");
      out.write("    <table > \r\n");
      out.write("      <tr> \r\n");
      out.write("        <td rowspan=\"4\">\r\n");
      out.write("          <a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("             <img src=\"/cban/imageFile/");
      out.print(bookLists[j].getBook_image());
      out.write("\" border=\"0\" width=\"60\" height=\"90\"></a></td> \r\n");
      out.write("       <td>\r\n");
      out.write("       \t\t<b><a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("              ");
      out.print(bookLists[j].getBook_title() );
      out.write("</a></b>\r\n");
      out.write("        </td> \r\n");
      out.write("       <td rowspan=\"4\">\r\n");
      out.write("          ");
if(bookLists[j].getBook_count()==0){ 
      out.write("\r\n");
      out.write("              <b>일시품절</b>\r\n");
      out.write("          ");
}else{ 
      out.write("\r\n");
      out.write("               &nbsp;\r\n");
      out.write("          ");
} 
      out.write("\r\n");
      out.write("       </td>\r\n");
      out.write("     </tr>        \r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>출판사 : ");
      out.print(bookLists[j].getPublishing_com());
      out.write("</td> \r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>저자 : ");
      out.print(bookLists[j].getAuthor());
      out.write("</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>정가 :");
      out.print(NumberFormat.getInstance().format(bookLists[j].getBook_price()));
      out.write("원<br>\r\n");
      out.write("                판매가 : <b><font color=\"red\">\r\n");
      out.write("       ");
      out.print(NumberFormat.getInstance().format((int)(bookLists[j].getBook_price()*((double)(100-bookLists[j].getDiscount_rate())/100))));
      out.write("\r\n");
      out.write("            </font></b>원</td> \r\n");
      out.write("     </tr> \r\n");
      out.write("     </table>\r\n");
      out.write("     <hr>\r\n");

  }
}
  
  for(int i=20; i<=26;i++){
	  bookLists = bookProcess.getBooks(i+"0",3);
     
	if(bookLists[0].getBook_kind().equals("200")){
		book_kindName="문학 소설";  
 	}else if(bookLists[0].getBook_kind().equals("210")){
		book_kindName="경제 경영";
 	}else if(bookLists[0].getBook_kind().equals("220")){
		book_kindName="인문 사회";  
	}else if(bookLists[0].getBook_kind().equals("230")){
		book_kindName="예술 대중문화";
	}else if(bookLists[0].getBook_kind().equals("240")){
	      book_kindName="취미 라이프스타일";  
   }else if(bookLists[0].getBook_kind().equals("250")){
	      book_kindName="컴퓨터";
   }else if(bookLists[0].getBook_kind().equals("260")){
	      book_kindName="자연과학";
   }

      out.write("\r\n");
      out.write("  <br><b>");
      out.print(book_kindName);
      out.write(" 분류의 신간목록: \r\n");
      out.write("  <a href=\"list.jsp?book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">더보기</a>\r\n");
      out.write("  </b>\r\n");
             
  for(int j=0;j<bookLists.length;j++){
	  if(bookLists[j] == null) continue;

      out.write("\r\n");
      out.write("    <table > \r\n");
      out.write("      <tr> \r\n");
      out.write("        <td rowspan=\"4\">\r\n");
      out.write("          <a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("             <img src=\"/cban/imageFile/");
      out.print(bookLists[j].getBook_image());
      out.write("\" border=\"0\" width=\"60\" height=\"90\"></a></td> \r\n");
      out.write("       <td>\r\n");
      out.write("       \t\t<b><a href=\"bookContent.jsp?book_id=");
      out.print(bookLists[j].getBook_id());
      out.write("&book_kind=");
      out.print(bookLists[0].getBook_kind());
      out.write("\">\r\n");
      out.write("              ");
      out.print(bookLists[j].getBook_title() );
      out.write("</a></b>\r\n");
      out.write("        </td> \r\n");
      out.write("       <td rowspan=\"4\">\r\n");
      out.write("          ");
if(bookLists[j].getBook_count()==0){ 
      out.write("\r\n");
      out.write("              <b>일시품절</b>\r\n");
      out.write("          ");
}else{ 
      out.write("\r\n");
      out.write("               &nbsp;\r\n");
      out.write("          ");
} 
      out.write("\r\n");
      out.write("       </td>\r\n");
      out.write("     </tr>        \r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>출판사 : ");
      out.print(bookLists[j].getPublishing_com());
      out.write("</td> \r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>저자 : ");
      out.print(bookLists[j].getAuthor());
      out.write("</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr> \r\n");
      out.write("       <td>정가 :");
      out.print(NumberFormat.getInstance().format(bookLists[j].getBook_price()));
      out.write("원<br>\r\n");
      out.write("                판매가 : <b><font color=\"red\">\r\n");
      out.write("       ");
      out.print(NumberFormat.getInstance().format((int)(bookLists[j].getBook_price()*((double)(100-bookLists[j].getDiscount_rate())/100))));
      out.write("\r\n");
      out.write("            </font></b>원</td> \r\n");
      out.write("     </tr> \r\n");
      out.write("     </table>\r\n");
      out.write("     <hr>\r\n");

  }
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
