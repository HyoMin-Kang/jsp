/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-06-21 16:30:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookshop.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import java.net.URLDecoder;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import ch14.bookshop.shopping.CommentDBBean;
import ch14.bookshop.shopping.CommentDataBean;
import java.text.NumberFormat;
import java.util.List;
import java.text.SimpleDateFormat;

public final class bookContent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ch14.bookshop.shopping.CommentDataBean");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("ch14.bookshop.shopping.CommentDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	String title = "Book Shopping Mall";
	String book_kind = request.getParameter("book_kind");
	String book_id = request.getParameter("book_id");
	String id = "";
	int buy_price=0;
	
	int num = 0;
    int count = 0;
    
    String order = request.getParameter("order");
	if(order == null) {
		order = "newest";
	}
    
    List<CommentDataBean> commentList = null; 
    CommentDBBean dbPro = CommentDBBean.getInstance();
    count = dbPro.getCommentCount(Integer.parseInt(book_id));
    if (count > 0) {
    	commentList = dbPro.getComments(Integer.parseInt(book_id), order);
    }
    
	try{
	  if(session.getAttribute("id")==null)
	    id="not";
	  else
	    id= (String)session.getAttribute("id");    
	}catch(Exception e){}

      out.write("\r\n");
      out.write("\r\n");

ShopBookDataBean bookList = null;

ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
 
bookList = bookProcess.getBook(Integer.parseInt(book_id));
     
if(book_kind == null) {
	book_kind = "all";
}


      out.write('\r');
      out.write('\n');

	//상품 정보를 쿠키에 담기
	Cookie cookie = new Cookie("item"+book_id, URLEncoder.encode(bookList.getBook_title(),"UTF-8"));
	cookie.setMaxAge(60*60*24); //하루동안 쿠키 저장
	response.addCookie(cookie);

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("<div class=\"col-md-8 blog-main\">\r\n");
      out.write("<h3 class=\"pb-3 mb-4 font-italic border-bottom\">Book details</h3>\r\n");
      out.write("\r\n");
      out.write("<form name=\"inform\" method=\"post\" action=\"cartInsert.jsp\">\r\n");
      out.write("\t<div class=\"blog-post\">\r\n");
      out.write("\t\t<h3 class=\"blog-post-title\"><b>");
      out.print(bookList.getBook_title() );
      out.write("</b></h3>\r\n");
      out.write("\t\t\r\n");
      out.write("\t  \t<table class=\"table\">\r\n");
      out.write("\t\t\t<tr> \r\n");
      out.write("\t\t\t\t<td rowspan=\"6\"><img src=\"/cban/imageFile/");
      out.print(bookList.getBook_image());
      out.write("\" border=\"0\" width=\"150\" height=\"200\"></td> \r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr><td>저자 : ");
      out.print(bookList.getAuthor());
      out.write("</td></tr>\r\n");
      out.write("  \t\t\t\t<tr><td>출판사 : ");
      out.print(bookList.getPublishing_com());
      out.write("</td></tr> \r\n");
      out.write("\t\t\t<tr><td>출판일 : ");
      out.print(bookList.getPublishing_date());
      out.write("</td></tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t정가 : ");
      out.print(NumberFormat.getInstance().format(bookList.getBook_price()));
      out.write("원<br>\r\n");
      out.write("     \t\t\t\t");
buy_price = (int)(bookList.getBook_price()*((double)(100-bookList.getDiscount_rate())/100)) ;
      out.write("\r\n");
      out.write("           \t\t판매가 : <b><font color=\"red\">");
      out.print(NumberFormat.getInstance().format((int)(buy_price)));
      out.write("원</font></b>\r\n");
      out.write("  \t\t\t\t\t</td> \r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr><td>수량 : <input type=\"text\" size=\"5\" name=\"buy_count\" value=\"1\"> 개\r\n");
      out.write(" ");

	if(id.equals("not")){
		if(bookList.getBook_count()==0){
 
      out.write("\r\n");
      out.write("        <b>일시품절</b>\r\n");
  
		}           
	}else{ 
		if(bookList.getBook_count()==0){

      out.write("\r\n");
      out.write("         <b>일시품절</b>\r\n");
      out.write("                           \r\n");
}else{ 
      out.write("\t \r\n");
      out.write("\t\t       <input type=\"hidden\" name=\"book_id\" value=\"");
      out.print(book_id );
      out.write("\">\r\n");
      out.write("\t\t       \t<input type=\"hidden\" name=\"book_image\" value=\"");
      out.print(bookList.getBook_image());
      out.write("\">\r\n");
      out.write("\t\t       \t<input type=\"hidden\" name=\"book_title\" value=\"");
      out.print(bookList.getBook_title() );
      out.write("\">\r\n");
      out.write("\t\t       \t<input type=\"hidden\" name=\"buy_price\" value=\"");
      out.print(buy_price );
      out.write("\">\r\n");
      out.write("\t\t       \t<input type=\"hidden\" name=\"book_kind\" value=\"");
      out.print(book_kind );
      out.write("\">              \r\n");
      out.write("\t\t\t\t<input type=\"submit\" class=\"btn btn-sm btn-outline-primary\" value=\"장바구니에 담기\">\r\n");
	
		}
	}

      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" class=\"btn btn-sm btn-outline-secondary\" value=\"목록으로\" onclick=\"javascript:window.location='list.jsp?book_kind=");
      out.print(book_kind);
      out.write("'\">\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" class=\"btn btn-sm btn-outline-secondary\" value=\"메인으로\" onclick=\"javascript:window.location='shopMain.jsp'\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>   \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t    \t<td colspan=\"2\">");
      out.print(bookList.getBook_content());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr> \r\n");
      out.write("\t  \t</table>\r\n");
      out.write("\t</div> <!-- /.blog-post -->\r\n");
      out.write("</form>\r\n");
      out.write("\t\r\n");
      out.write("<div class=\"blog-post\">\r\n");
      out.write("<form name=\"writecomment\" method=\"post\" action=\"writeCommentPro.jsp\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t한줄평(");
      out.print(count );
      out.write(") \r\n");
      out.write("\t\t\t<div class=\"btn-group\">\r\n");
      out.write("\t\t\t<button class=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("\t\t\t\t정렬\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<div class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t<a class=\"dropdown-item\" href=\"bookContent.jsp?book_id=");
      out.print(book_id);
      out.write("&book_kind=");
      out.print(book_kind);
      out.write("&order=newest\">최신순</a>\r\n");
      out.write("\t\t\t    <a class=\"dropdown-item\" href=\"bookContent.jsp?book_id=");
      out.print(book_id);
      out.write("&book_kind=");
      out.print(book_kind);
      out.write("&order=highest\">별점 높은 순</a>\r\n");
      out.write("\t\t\t    <a class=\"dropdown-item\" href=\"bookContent.jsp?book_id=");
      out.print(book_id);
      out.write("&book_kind=");
      out.print(book_kind);
      out.write("&order=lowest\">별점 낮은 순</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"inputStar\">별점</label>\r\n");
      out.write("\t\t\t<select class=\"form-control\" name=\"star\" id=\"inputStar\">\r\n");
      out.write("\t\t\t\t<option value=\"5\">★★★★★</option>\r\n");
      out.write("\t\t\t\t<option value=\"4\">★★★★☆</option>\r\n");
      out.write("\t\t\t\t<option value=\"3\">★★★☆☆</option>\r\n");
      out.write("\t\t\t\t<option value=\"2\">★★☆☆☆</option>\r\n");
      out.write("\t\t\t\t<option value=\"1\">★☆☆☆☆</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"inputContent\">내용</label>\r\n");
      out.write("\t\t\t<textarea rows=\"2\" class=\"form-control\" name=\"content\" id=\"inputContent\" maxlength=\"100\"></textarea>\r\n");
      out.write("\t\t\t<small class=\"form-text text-muted\">한줄평은 100자까지 작성이 가능합니다.</small>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"writer\" value=\"");
      out.print(id );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"ref\" value=\"");
      out.print(book_id);
      out.write("\">\r\n");
      out.write("\t\t<input type=\"submit\" class=\"btn btn-sm btn-outline-primary align-right\" value=\"작성\"><br><br>\r\n");
      out.write("</form>\r\n");
      out.write("\t\t\r\n");

if(commentList != null && commentList.size() > 0) {
	for(int i=0; i<commentList.size(); i++) {
		CommentDataBean comment = commentList.get(i);			

      out.write("\r\n");
      out.write("<form name=\"updatecomment\" method=\"post\" action=\"updateCommentPro.jsp\">\r\n");
      out.write("\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><b>작성자</b></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(comment.getWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><b>작성일</b></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(sdf.format(comment.getReg_date()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><b>별점</b></td>\r\n");
      out.write("\t\t\t\t<td><img src=\"/cban/imageFile/rating");
      out.print(comment.getStar());
      out.write(".png\" width=\"100\"></td>\r\n");
 
		if(id.equals(comment.getWriter())) {

      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"updateOpen(");
      out.print(comment.getNum());
      out.write(',');
      out.write(' ');
      out.print(book_id);
      out.write(");\">수정</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"document.location.href='deleteCommentPro.jsp?book_id=");
      out.print(book_id );
      out.write("&num=");
      out.print(comment.getNum());
      out.write("&id=");
      out.print(id);
      out.write("'\">삭제</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");

		} else {

      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" disabled=\"disabled\">수정</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-outline-danger\" disabled=\"disabled\">삭제</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");

		}

      out.write("\r\n");
      out.write("\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"7\">");
      out.print(comment.getContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");

	}
}

      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</div> <!-- /.blog-post -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div> <!-- /.blog-main -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/side.jsp", out, false);
      out.write(" <!-- aside -->\r\n");
      out.write("</div> <!-- /.row -->\r\n");
      out.write("\r\n");
      out.write("</div> <!-- /.container -->\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function updateOpen(comment_num, book_id) {\r\n");
      out.write("\turl = 'updateCommentForm.jsp?num=' + comment_num + '&book_id=' + book_id;\r\n");
      out.write("\twindow.open(url, '댓글 수정', 'height=200, width=400, scrollbars=no, resizable=no');\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
