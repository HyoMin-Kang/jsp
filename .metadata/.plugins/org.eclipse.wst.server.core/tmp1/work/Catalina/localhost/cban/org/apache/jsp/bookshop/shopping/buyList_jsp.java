/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-06-21 07:13:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookshop.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.shopping.BuyDataBean;
import ch14.bookshop.shopping.BuyDBBean;
import java.util.List;
import java.text.NumberFormat;

public final class buyList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ch14.bookshop.shopping.BuyDataBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch14.bookshop.shopping.BuyDBBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String title = "Book Shopping Mall";
	String buyer = (String)session.getAttribute("id");
	
	List<BuyDataBean> buyLists = null;
	BuyDataBean buyList = null;
	int count = 0;
	int number = 0;
	int total = 0;
	long compareId=0;
	long preId=0;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");

if(session.getAttribute("id")==null){
   response.sendRedirect("shopMain.jsp");        
}else{
   BuyDBBean buyProcess = BuyDBBean.getInstance();
   count = buyProcess.getListCount(buyer);

   if(count == 0){

      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t  <h3 class=\"pb-3 mb-4 font-italic border-bottom\">구매 목록</h3>\r\n");
      out.write("\t  <div class=\"alert alert-primary\" role=\"alert\">구매한 목록이 없습니다.</div>\r\n");
      out.write("\t  <input type=\"button\" class=\"btn btn-sm btn-outline-secondary\" value=\"메인으로\" onclick=\"javascript:window.location='shopMain.jsp'\">\r\n");
      out.write("\t</div>\r\n");

  }else{ //count != 0
    buyLists = buyProcess.getBuyList(buyer);

      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t  <h3 class=\"pb-3 mb-4 font-italic border-bottom\">구매 목록</h3>\r\n");
      out.write("\t<table class=\"table\"><tr><td>\r\n");

    for(int i=0;i<buyLists.size();i++){
       buyList = buyLists.get(i);
    	 
		if(i<buyLists.size()-1){
    	  BuyDataBean compare = buyLists.get(i+1);
    	  compareId = compare.getBuy_id();
    		 
    	  BuyDataBean pre = buyLists.get(buyLists.size()-2);
    	  preId = pre.getBuy_id();
		}  	 

      out.write("\r\n");
      out.write("   <table class=\"table\"> \r\n");
      out.write("   \t\t<colgroup>\r\n");
      out.write("   \t\t\t<col>\r\n");
      out.write("   \t\t\t<col>\r\n");
      out.write("   \t\t\t<col>\r\n");
      out.write("   \t\t\t<col>\r\n");
      out.write("   \t\t\t<col>\r\n");
      out.write("   \t\t</colgroup>\r\n");
      out.write("\t\t<thead class=\"thead-light\"> \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t   <th style=\"text-align: center\">번호</th>\r\n");
      out.write("\t\t\t   <th>책이름</th> \r\n");
      out.write("\t\t\t   <th>판매가격</th>\r\n");
      out.write("\t\t\t   <th>수량</th> \r\n");
      out.write("\t\t\t   <th>금액</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tr> \r\n");
      out.write("\t\t\t<td>");
      out.print(buyList.getBuy_id());
      out.write("</td> \r\n");
      out.write("\t\t\t<td align=\"left\">\r\n");
      out.write("\t\t   \t\t<img src=\"/cban/imageFile/");
      out.print(buyList.getBook_image());
      out.write("\" border=\"0\" width=\"30\" height=\"50\" align=\"middle\">\r\n");
      out.write("\t\t\t\t");
      out.print(buyList.getBook_title());
      out.write("\r\n");
      out.write("\t\t\t</td> \r\n");
      out.write("\t\t\t<td>");
      out.print(NumberFormat.getInstance().format(buyList.getBuy_price()));
      out.write("원</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(buyList.getBuy_count());
      out.write("</td> \r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t   ");
total += buyList.getBuy_count()*buyList.getBuy_price();
      out.write("\r\n");
      out.write("\t\t\t\t");
      out.print(NumberFormat.getInstance().format(buyList.getBuy_count()*buyList.getBuy_price()) );
      out.write("원\r\n");
      out.write("\t\t \t</td>\r\n");
      out.write("\t\t</tr>\r\n");

    if(buyList.getBuy_id() != compareId || (i == buyLists.size()-1) && preId != buyList.getBuy_id()) {

      out.write(" \r\n");
      out.write("      <tr>\r\n");
      out.write("       <td colspan=\"5\" align=\"right\">\r\n");
      out.write("         <b>총 금액 : ");
      out.print(NumberFormat.getInstance().format(total));
      out.write("원</b></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("     </table>\r\n");
 
      compareId = buyList.getBuy_id();
       total = 0;
   }else{

      out.write("\r\n");
      out.write("\t</td></tr></table>\r\n");

   }
 } //end of for

      out.write("\r\n");
      out.write("<input type=\"button\" class=\"btn btn-sm btn-outline-secondary\" value=\"메인으로\" onclick=\"javascript:window.location='shopMain.jsp'\">\r\n");
      out.write("</div> <!-- /.container -->\r\n");

 } //end of else
}

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
