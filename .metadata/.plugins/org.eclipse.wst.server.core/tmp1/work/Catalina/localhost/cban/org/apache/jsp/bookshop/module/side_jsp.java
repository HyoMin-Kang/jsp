/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-06-21 16:16:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookshop.module;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import java.net.URLDecoder;

public final class side_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.net.URLDecoder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Cookie[] cookie = request.getCookies();	

      out.write("\r\n");
      out.write("<aside class=\"col-md-4 blog-sidebar\">\r\n");
      out.write("\t<div class=\"p-3 mb-3 bg-light rounded\">\r\n");
      out.write("\t\t<h4 class=\"font-italic\">Category</h4>\r\n");
      out.write("\t\t<ul class=\"list-unstyled\">\r\n");
      out.write("\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=all\">전체목록보기</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=kor\">국내도서</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=100\">건강 취미</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=110\">경제 경영</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=120\">문학</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=130\">사회 정치</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=140\">자기계발</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=150\">자연과학</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=160\">참고서</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=foreign\">외국도서</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=200\">문학 소설</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=210\">경제 경영</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=220\">인문 사회</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=230\">예술 대중문화</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=240\">취미 라이프스타일</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=250\">컴퓨터</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"../shopping/list.jsp?book_kind=260\">자연과학</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"p-3 mb-3 bg-light rounded\">\r\n");
      out.write("\t\t<h4 class=\"font-italic\">History</h4>\r\n");
      out.write("\t\t<ol class=\"list-unstyled\">\r\n");

	if(cookie != null) {
		for(int i=0; i<cookie.length; i++) {
			String name = cookie[i].getName(); //전송된 쿠키이름 얻어오기
			if(name.indexOf("item") != -1) { //쿠키 이름에 item이 포함된다면
				String value = cookie[i].getValue();
				String item = URLDecoder.decode(value, "UTF-8");

      out.write("\t\r\n");
      out.write("\t\t\t<li><a href=\"../shopping/bookContent.jsp?book_id=");
      out.print(name.substring(4) );
      out.write("&book_kind=all\">");
      out.print(item );
      out.write("</a></li>\r\n");

			}
		}
	}

      out.write("\r\n");
      out.write("\t\t</ol>\r\n");
      out.write("\t</div>\r\n");
      out.write("</aside>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
