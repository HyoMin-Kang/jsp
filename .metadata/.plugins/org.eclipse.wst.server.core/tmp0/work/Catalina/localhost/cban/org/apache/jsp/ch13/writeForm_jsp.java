/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-04-12 13:29:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch13;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writeForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String title = "답글 작성";

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/_inc/header_inc.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
 
  int num = 0, ref = 1, re_step = 0, re_level = 0;
  String strV = "";
  try{
    if(request.getParameter("num")!=null){
	   num=Integer.parseInt(request.getParameter("num"));
	   ref=Integer.parseInt(request.getParameter("ref"));
	   re_step=Integer.parseInt(request.getParameter("re_step"));
	   re_level=Integer.parseInt(request.getParameter("re_level"));
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h3><i class=\"fas fa-list-ol\"></i> 글쓰기</h3>\r\n");
      out.write("\r\n");
      out.write("<a class=\"btn btn-primary btn-sm\" href=\"list.jsp\" role=\"button\"><i class=\"fas fa-pencil-alt\"></i> 글목록</a>\r\n");
      out.write("\r\n");
      out.write("<form class=\"form\" method=\"post\" name=\"writeform\" action=\"writePro.jsp\" onsubmit=\"return writeSave()\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"num\" value=\"");
      out.print(num);
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"ref\" value=\"");
      out.print(ref);
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"re_step\" value=\"");
      out.print(re_step);
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"re_level\" value=\"");
      out.print(re_level);
      out.write("\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"card\">\r\n");
      out.write("\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-6 offset-md-3 text-center\">\r\n");
      out.write("\t\t\t\t\t\t");

							if (request.getParameter("num") == null)
									strV = "";
							else
									strV = "[답변] ";
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  size=\"40\" maxlength=\"50\" name=\"subject\" value=\"");
      out.print(strV);
      out.write("\"  placeholder=\"글제목\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3 text-right\"><input type=\"text\" class=\"form-control\" size=\"10\" maxlength=\"10\" name=\"writer\" placeholder=\"작성자\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<ul class=\"list-group list-group-flush\">\r\n");
      out.write("\t\t\t<li class=\"list-group-item text-right\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" size=\"40\" maxlength=\"30\" id=\"inputEmail\" name=\"email\" placeholder=\"이메일\">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li class=\"list-group-item\">\r\n");
      out.write("\t\t\t\t<textarea class=\"form-control\" name=\"content\" rows=\"13\" cols=\"40\" placeholder=\"글내용\"></textarea>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li class=\"list-group-item\">\r\n");
      out.write("\t\t\t\t<label for=\"inputPasswd\">비밀번호</label>\r\n");
      out.write("\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPasswd\" name=\"passwd\" placeholder=\"비밀번호\" required=\"required\">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<div class=\"card-footer\">\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-dark\">글쓰기</button>\r\n");
      out.write("\t\t\t<button type=\"reset\" class=\"btn btn-dark\">다시 작성</button>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-dark\" OnClick=\"window.location='list.jsp'\">글목록</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>    \r\n");
      out.write("\r\n");
      out.write("<script src=\"/cban/ch13/script.js\"></script>\r\n");
      out.write("\r\n");
      out.write(" ");

	}catch(Exception e){}

      out.write("     \r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/_inc/footer_inc.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
