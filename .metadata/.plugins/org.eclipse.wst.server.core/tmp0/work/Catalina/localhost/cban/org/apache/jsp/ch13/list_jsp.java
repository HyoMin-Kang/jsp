/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-04-11 13:38:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch13;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch13.board.BoardDBBean;
import ch13.board.BoardDataBean;
import java.util.List;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    int pageSize = 10;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch13.board.BoardDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ch13.board.BoardDataBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String title = "게시판변경";
    String pageNum = request.getParameter("pageNum");

    if (pageNum == null) {
        pageNum = "1";
    }

    int currentPage = Integer.parseInt(pageNum);
    int startRow = (currentPage - 1) * pageSize + 1;
    int endRow = currentPage * pageSize;
    int count = 0;
    int number = 0;
    List<BoardDataBean> articleList = null; 
    
    BoardDBBean dbPro = BoardDBBean.getInstance();
    count = dbPro.getArticleCount();
    
    if (count > 0) {
        articleList = dbPro.getArticles(startRow, pageSize);
    }

	number = count-(currentPage-1)*pageSize;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/_inc/header_inc.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h3><i class=\"fas fa-list-ol\"></i> 글목록(전체 글:");
      out.print(count);
      out.write(")</h3>\r\n");
      out.write("\r\n");
      out.write("<a class=\"btn btn-primary btn-sm\" href=\"writeForm.jsp\" role=\"button\"><i class=\"fas fa-pencil-alt\"></i> 글쓰기</a>\r\n");
      out.write("\r\n");
 if (count == 0) { 
      out.write("\r\n");
      out.write("<div class=\"alert alert-danger\" role=\"alert\">\r\n");
      out.write("  게시판에 저장된 글이 없습니다.\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
 } else {
      out.write("\r\n");
      out.write("<table class=\"table table-hover table-bordered\"> \r\n");
      out.write("\t<colgroup>\r\n");
      out.write("\t  \t<col width=\"8%\">\r\n");
      out.write("\t  \t<col width=\"*%\">\r\n");
      out.write("\t  \t<col width=\"10%\">\r\n");
      out.write("\t  \t<col width=\"18%\">\r\n");
      out.write("\t  \t<col width=\"8%\">\r\n");
      out.write("\t  \t<col width=\"10%\">\r\n");
      out.write("\t</colgroup>\r\n");
      out.write("\t\r\n");
      out.write("\t<thead class=\"thead-dark\">\r\n");
      out.write("    <tr> \r\n");
      out.write("      <th scope=\"col\">번호</th> \r\n");
      out.write("      <th scope=\"col\">제목</th> \r\n");
      out.write("      <th scope=\"col\">작성자</th>\r\n");
      out.write("      <th scope=\"col\">작성일</th> \r\n");
      out.write("      <th scope=\"col\">조 회</th> \r\n");
      out.write("      <th scope=\"col\">IP</th>    \r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    \r\n");
      out.write("    <tbody>\r\n");
  
   	for (int i = 0 ; i < articleList.size() ; i++) {
		BoardDataBean article = articleList.get(i);

      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("   \t\t<td> ");
      out.print(number--);
      out.write("</td>\r\n");
      out.write("   \t\t\r\n");

	int wid=0; 
	if(article.getRe_level()>0){
		wid=10*(article.getRe_level());

      out.write("\r\n");
      out.write("\t\t<td style=\"text-indent: ");
      out.print(wid);
      out.write("px\"> \r\n");
      out.write("\t\t\t<i class=\"fas fa-reply fa-lg\"></i>\r\n");
  }else{
      out.write("\r\n");
      out.write("\t\t<td style=\"text-indent: ");
      out.print(wid);
      out.write("px\">\r\n");
  }
      out.write("\r\n");
      out.write("           \r\n");
      out.write("\t\t<a href=\"content.jsp?num=");
      out.print(article.getNum());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write('"');
      out.write('>');
      out.print(article.getSubject());
      out.write("</a> \r\n");
 if(article.getReadcount()>=20){
      out.write("\r\n");
      out.write("\t\t<span class=\"badge badge-danger\">HOT</span>");
}
      out.write(" </td>\r\n");
      out.write("    \t<td><a href=\"mailto:");
      out.print(article.getEmail());
      out.write('"');
      out.write('>');
      out.print(article.getWriter());
      out.write("</a></td>\r\n");
      out.write("    \t<td>");
      out.print( sdf.format(article.getReg_date()));
      out.write("</td>\r\n");
      out.write("    \t<td>");
      out.print(article.getReadcount());
      out.write("</td>\r\n");
      out.write("    \t<td>");
      out.print(article.getIp());
      out.write("</td>\r\n");
      out.write("  \t</tr>\r\n");
}
      out.write("\r\n");
      out.write("\t</tbody>\r\n");
      out.write("</table>\r\n");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- pagination -->\r\n");
      out.write("<nav aria-label=\"Page navigation\">\r\n");
      out.write("  <ul class=\"pagination justify-content-center\">\r\n");

    if (count > 0) {
        int pageCount = count / pageSize + (count % pageSize == 0 ? 0 : 1);
		int startPage =1;
		
		if(currentPage % 10 != 0)
			startPage = (int)(currentPage/10)*10 + 1;
		else
			startPage = ((int)(currentPage/10)-1)*10 + 1;

		int pageBlock = 10;
        int endPage = startPage + pageBlock - 1;
        if (endPage > pageCount) endPage = pageCount;
        
        if (startPage > 10) { 
      out.write("\t\r\n");
      out.write("\t\t\t<li class=\"page-item\">\r\n");
      out.write("\t\t\t\t<a class=\"page-link\" href=\"list.jsp?pageNum=");
      out.print( currentPage-1 );
      out.write("\" aria-label=\"Previous\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"sr-only\">Previous</span>\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</li>\r\n");
   }
      
        
        for (int i = startPage ; i <= endPage ; i++) {  
        	if (i == currentPage) {

      out.write("        \t    \r\n");
      out.write("\t\t\t\t<li class=\"page-item active\">\r\n");
      out.write("\t\t\t\t   <a class=\"page-link\" href=\"list.jsp?pageNum=");
      out.print( i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write(" <span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("\t\t\t\t </li>\r\n");
 
        	} else {

      out.write("\r\n");
      out.write("        \t\t<li class=\"page-item\"><a class=\"page-link\" href=\"list.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a></li>\r\n");

        	}
		}
        
        if (endPage < pageCount) {  
      out.write("\r\n");
      out.write("\t\t\t<li class=\"page-item\">\r\n");
      out.write("\t\t\t\t<a class=\"page-link\" href=\"list.jsp?pageNum=");
      out.print( startPage + 10 );
      out.write("\" aria-label=\"Next\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"sr-only\">Next</span>\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</li>\r\n");

        }
    }

      out.write("\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/_inc/footer_inc.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
